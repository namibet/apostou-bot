import time
from playwright.sync_api import Page
from utils.registrar_tempo import registrar_tempo

def testar_deposito_pix(page: Page, nome_csv: str, inicio_processo: float) -> float:
    """
    Testa quanto tempo leva desde o clique no bot√£o de Dep√≥sito at√© a gera√ß√£o do QR Code Pix.

    Args:
        page (Page): Inst√¢ncia ativa da p√°gina Playwright.
        nome_csv (str): Caminho do arquivo CSV para registro de tempo.
        inicio_processo (float): Timestamp do in√≠cio geral do processo.

    Returns:
        float: Timestamp do fim do processo de gera√ß√£o do QR Code.
    """
    print("\nüí∞ Iniciando fluxo de dep√≥sito via Pix...")
    start = time.time()
    
    try:
        print("‚è≥ Clicando no bot√£o 'Depositar - PIX' da home...")
        page.locator("div.deposit-button:has-text('PIX')").click()

        page.wait_for_load_state("domcontentloaded")
        time.sleep(0.5)

        print("‚è≥ Clicando no bot√£o 'Depositar' da tela de valor...")
        page.locator("button:has-text('Depositar')").click()

        print("‚è≥ Aguardando modal com texto 'C√≥digo Pix v√°lido at√©:'...")
        page.locator("text=C√≥digo Pix v√°lido at√©:").wait_for(timeout=10000)

        end = time.time()
        registrar_tempo(nome_csv, "üíµ_deposito", end, start, inicio_processo)
        print(f"‚úÖ QR Code gerado em {end - start:.2f} segundos.\n")
        return end

    except Exception as e:
        end = time.time()
        registrar_tempo(nome_csv, "üíµ_deposito ‚ùå(erro)", end, start, inicio_processo)
        return end
